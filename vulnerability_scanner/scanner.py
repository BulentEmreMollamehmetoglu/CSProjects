#!/usr/bin/env python

import requests
import re
import urllib.parse as urlparse
from bs4 import BeautifulSoup
from urllib.parse import urljoin
class Scanner:
    def __init__(self,url,ignore_links):
        self.session = requests.Session()
        self.target_url = url
        self.target_links = []
        self.links_to_ignore = ignore_links
    def extract_links_from(self,url):
        response = self.session.get(url)
        return re.findall('(?:href=")(.*?)"',response.content.decode(errors="ignore"))


    def crawl(self,url=None):
        if url == None:
            url = self.target_url
        href_links = self.extract_links_from(url)
        for link in href_links:
            link = urlparse.urljoin(url,link)

            if "#" in link:
                link = link.split("#")[0]

            if self.target_url in link and link not in self.target_links and link not in self.links_to_ignore:
                self.target_links.append(link)
                print(link)
                self.crawl(link)


    def extract_forms(self,url):
        response = self.session.get(url)
        soup = BeautifulSoup(response.content, 'html.parser')
        return soup.findAll("form")

    def submit_form(self,form,value,url):
        action = form.get("action")
        post_url = urljoin(url,action)
        method = form.get("method")
        #print(post_url)
        inputs_list = form.findAll("input")
        post_data = {}

        for inputs in inputs_list:
            input_name = inputs.get("name")
            input_type = inputs.get("type")
            input_value = inputs.get("value")
            if input_type == "text":
                input_value = value
            #print(input_name)
            post_data[input_name] = input_value
        if method == "post":
            return self.session.post(post_url,data=post_data)
        return self.session.get(post_url,params=post_data)



    def run_scanner(self):
        for link in self.target_links:
            forms = self.extract_forms(link)
            for form in forms:
                print("[+] Testing form in " + link)
                is_vulnerable_to_xss = self.test_xss_in_form(form,link)
                if is_vulnerable_to_xss:
                    print("\n\n[+] XSS has found in " + link + " in the following form")
                    print(form)

            if "=" in link:
                print("\n\n[+] Testing " + link)
                is_vulnerable_to_xss = self.test_xss_in_url(link)
                if is_vulnerable_to_xss:
                    print("\n[+] XSS has found in " + link)

    def test_xss_in_form(self,form,url):
        xss_test_script = "<sCript>alert('hello world!')</scriPt>" # we capitalize some letters in the script tag so that we make sure our payload passes the xss protection
        response = self.submit_form(form,xss_test_script,url)
        if xss_test_script in response.text:
            return True
        else:
            #print("form has not been found.")
            return False
        '''
        else:
            return False
        '''

    def test_xss_in_url(self,url):
        xss_test_script = "<sCript>alert('test')</scriPt>"
        url = url.replace("=","=" + xss_test_script)
        response = self.session.get(url)
        return xss_test_script in response.text

